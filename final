#!/usr/bin/env python
# coding: utf-8

# In[214]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import yfinance as yf
import datetime
import sklearn
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error


# In[215]:


TSMC = yf.Ticker('2330.TW')
start = datetime.datetime(2019, 1, 1)
end = datetime.datetime(2022, 12, 1)
df_full = yf.download('2330.TW', start=start, end=end).reset_index()


# In[216]:


df_full.head()


# In[217]:


df_full.set_index('Date', inplace=True)
df_raw = df_full[df_full.columns[-1]]
df_raw.plot(label='2330.TW', figsize=(16,8), title=df_full.columns[-1], grid=True, legend=True)


# In[218]:


window = 20
df_MA = df_full[df_full.columns[-1]].rolling(window).mean()
df_raw.plot(label='2330.TW', figsize=(16,8), title=df_full.columns[-1], grid=True, legend=True)
df_MA.plot(label='2330.TW'+'_MA', figsize=(16,8), title=df_full.columns[-1], grid=True, legend=True)


# In[219]:


df_X = df_full.iloc[:-1,:-1]  #只拿第 1 天到第 N-1 天，而 y 則取第 2 天到第 N 天
df_y = df_full.iloc[1:,-1]

X = df_X.to_numpy() 
y = df_y.to_numpy() 

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)
X_train = StandardScaler().fit_transform(X_train)
X_test = StandardScaler().fit_transform(X_test)
y_train = StandardScaler().fit_transform(y_train.reshape(-1,1))
y_test = StandardScaler().fit_transform(y_test.reshape(-1,1))


# In[221]:



linear = LinearRegression()
linear.fit(X_train, y_train)

train_predict=linear.predict(X_train).reshape
test_predict=linear.predict(X_test).reshape



linearscore = linear.score(X_train,y_train)
print("the value of linear regression  is: %f" %  linearscore)


# In[ ]:





# In[ ]:




